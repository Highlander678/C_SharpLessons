// Программа читает XML-файл (источник), содержащий сведения о книгах
// по программированию и выбирает книги автора Зиборова. Выбранные
// книги программа записывает в другой (производный) XML-файл
using System;
using System.Linq;
// Другие директивы using удалены, поскольку они не используются в данной
// программе.
// Добавим эту директиву:
using System.Xml.Linq;
namespace LinqBhv
{
    class Program
    {
        static void Main(string[] args)
        {
            var Установки = new System.Xml.XmlWriterSettings();
            // Создавать отступы для элементов:
            Установки.Indent = true;
            // Создание производного XML-файла:
            var XmlПисатель = System.Xml.
                XmlWriter.Create(@"D:\ТолькоЗиборов.xml", Установки);
            // Добавляем начальный (корневой) элемент:
            XmlПисатель.WriteStartElement("Книги_Виктора_Зиборова");
            // Комментарий:
            XmlПисатель.WriteComment("Эти данные мы выбрали из bhv.xml");
            // Загружаем XML-документ - источник:
            var XmlДокумент = XDocument.Load(@"D:\bhv.xml");
            // Извлекаем корневой элемент:
            var КорневЭлемент =
                    XmlДокумент.Element("Издательство_БХВ-Петербуг");
            // Получаем список элементов "Книга":
            var СписокКниг = КорневЭлемент.Elements("Книга");
            // В этом списке анализируем дочерний элемент "Автор":
            foreach (var Элемент in СписокКниг)
                // Добавлям в производный XML-файл только книги Зиборова:
                if (Элемент.Element("Автор").Value == "Виктор Зиборов")
                    Элемент.WriteTo(XmlПисатель);
            // Добавляем конечный тег корневого элемента производного
            // Xml -документа:
            XmlПисатель.WriteEndElement();
            XmlПисатель.Flush();
            XmlПисатель.Close();
            System.Diagnostics.Process.Start(
                                "IExplore.exe", @"D:\ТолькоЗиборов.xml"); 
        }
    }
}
