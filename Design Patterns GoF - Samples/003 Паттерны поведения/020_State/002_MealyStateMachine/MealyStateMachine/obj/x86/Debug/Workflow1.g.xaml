<?xml version="1.0" encoding="utf-8"?>
<m:Workflow1 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:m="clr-namespace:MealyStateMachine;assembly=MealyStateMachine" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>MealyStateMachine</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <m:Workflow1.Implementation>
    <StateMachine>
      <StateMachine.InitialState>
        <State x:Name="__ReferenceID0" DisplayName="S0">
          <State.Entry>
            <Sequence>
              <WriteLine>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">new string('-', 20) + "\n" + "Entry S0"</mca:CSharpValue>
                </InArgument>
              </WriteLine>
              <WriteLine Text="Please enter a number 0 or 1" />
              <Assign>
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">
                    <mca:CSharpReference x:TypeArguments="x:Int32">x</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">Convert.ToInt32(Console.ReadLine());</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </State.Entry>
          <State.Exit>
            <WriteLine>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">"Exit S0" + "\n" + new string('-', 20)</mca:CSharpValue>
              </InArgument>
            </WriteLine>
          </State.Exit>
          <State.Transitions>
            <Transition DisplayName="0/Y2">
              <Transition.To>
                <State x:Name="__ReferenceID3" DisplayName="S1">
                  <State.Entry>
                    <Sequence>
                      <WriteLine>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">new string('-', 20) + "\n" + "Entry S1"</mca:CSharpValue>
                        </InArgument>
                      </WriteLine>
                      <WriteLine Text="Please enter a number 0 or 1" />
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <mca:CSharpReference x:TypeArguments="x:Int32">x</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <mca:CSharpValue x:TypeArguments="x:Int32">Convert.ToInt32(Console.ReadLine());</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </State.Entry>
                  <State.Exit>
                    <WriteLine>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">"Exit S1" + "\n" + new string('-', 20)</mca:CSharpValue>
                      </InArgument>
                    </WriteLine>
                  </State.Exit>
                  <State.Transitions>
                    <Transition DisplayName="1/Y3" To="{x:Reference __ReferenceID0}">
                      <Transition.Action>
                        <WriteLine Text="S1 -&gt; Y3 -&gt; S0" />
                      </Transition.Action>
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">x == 1</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                    <Transition DisplayName="0/Y1">
                      <Transition.To>
                        <State x:Name="__ReferenceID1" DisplayName="S2">
                          <State.Entry>
                            <Sequence>
                              <WriteLine>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">new string('-', 20) + "\n" + "Entry S2"</mca:CSharpValue>
                                </InArgument>
                              </WriteLine>
                              <WriteLine Text="Please enter a number 0 or 1" />
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">
                                    <mca:CSharpReference x:TypeArguments="x:Int32">x</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <mca:CSharpValue x:TypeArguments="x:Int32">System.Convert.ToInt32(Console.ReadLine());</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </State.Entry>
                          <State.Exit>
                            <WriteLine>
                              <InArgument x:TypeArguments="x:String">
                                <mca:CSharpValue x:TypeArguments="x:String">"Exit S2" + "\n" + new string('-', 20)</mca:CSharpValue>
                              </InArgument>
                            </WriteLine>
                          </State.Exit>
                          <State.Transitions>
                            <Transition DisplayName="0/Y0" To="{x:Reference __ReferenceID1}">
                              <Transition.Action>
                                <WriteLine Text="S2 -&gt; Y0 -&gt; S2" />
                              </Transition.Action>
                              <Transition.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">x == 0</mca:CSharpValue>
                              </Transition.Condition>
                            </Transition>
                            <Transition DisplayName="1/Y3" To="{x:Reference __ReferenceID0}">
                              <Transition.Action>
                                <WriteLine Text="S2 -&gt; Y3 -&gt; S0" />
                              </Transition.Action>
                              <Transition.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">x == 1</mca:CSharpValue>
                              </Transition.Condition>
                            </Transition>
                          </State.Transitions>
                        </State>
                      </Transition.To>
                      <Transition.Action>
                        <WriteLine Text="S1 -&gt; Y1 -&gt; S2" />
                      </Transition.Action>
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">x == 0</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
              <Transition.Action>
                <WriteLine Text="S0 -&gt; Y2 -&gt; S1" />
              </Transition.Action>
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">x == 0</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
            <Transition DisplayName="1/Y4">
              <Transition.To>
                <State x:Name="__ReferenceID2" DisplayName="S3">
                  <State.Entry>
                    <Sequence>
                      <WriteLine>
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">new string('-', 20) + "\n" + "Entry S3"</mca:CSharpValue>
                        </InArgument>
                      </WriteLine>
                      <WriteLine Text="Please enter a number 0 or 1" />
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">
                            <mca:CSharpReference x:TypeArguments="x:Int32">x</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">
                            <mca:CSharpValue x:TypeArguments="x:Int32">System.Convert.ToInt32(Console.ReadLine());</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </State.Entry>
                  <State.Exit>
                    <WriteLine>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">"Exit S3" + "\n" + new string('-', 20)</mca:CSharpValue>
                      </InArgument>
                    </WriteLine>
                  </State.Exit>
                  <State.Transitions>
                    <Transition DisplayName="1/Y5" To="{x:Reference __ReferenceID2}">
                      <Transition.Action>
                        <WriteLine Text="S3 -&gt; Y5 -&gt; S3" />
                      </Transition.Action>
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">x == 1</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                    <Transition DisplayName="0/Y2" To="{x:Reference __ReferenceID3}">
                      <Transition.Action>
                        <WriteLine Text="S3 -&gt; Y2 -&gt; S1" />
                      </Transition.Action>
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">x == 0</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
              <Transition.Action>
                <WriteLine Text="S0 -&gt; Y4 -&gt; S3" />
              </Transition.Action>
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">x == 1</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
          </State.Transitions>
        </State>
      </StateMachine.InitialState>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:Int32" Name="x" />
      </StateMachine.Variables>
      <sads:DebugSymbol.Symbol>9xBuDCViScXyfAz5jFMCOkDDqgFEOlxQQVRURVJOU1xEZXNpZ24gUGF0dGVybnMgU2FtcGxlc1xEZXNpZ24gUGF0dGVybnMgR29GXNCT0LvQsNCy0LAgNC4g0J/QsNGC0YLQtdGA0L3RiyDQv9C+0LLQtdC00LXQvdC40Y9cMDIwX1N0YXRlXDAwMl9NZWFseVN0YXRlTWFjaGluZVxNZWFseVN0YXRlTWFjaGluZVxXb3JrZmxvdzEueGFtbEUmA/sBEgIBASgH8QEPAgFNSQ+sARcCATRyF6IBHwIBG7cBD+cBFwIBAioLPRYCAVtAC0QXAgFYsgEPsgFUAgFVrwEPrwFmAgFT7QEP7QFUAgFR6gEP6gFnAgFPSxNeHgIBQmETZR8CAT9tF21cAgE8ahdqbwIBOqgBF6gBXAIBOKUBF6UBbwIBNnQbhwEmAgEpigEbjgEnAgEmlgEflgFkAgEjkwEfkwF3AgEhngEfngFkAgEfmwEfmwF3AgEduQETzAEeAgEQzwET0wEfAgEN2wEX2wFcAgEK2AEX2AFvAgEI4wEX4wFcAgEG4AEX4AFvAgEEKw0vGQIBYzANMG0CAWExDTwWAgFcQg9CcwIBWa8BTa8BYwIBVOoBTuoBZAIBUEwVUCECAUpRFVF0AgFIUhVdHgIBQ2MXY3sCAUBqVmpsAgE7pQFWpQFsAgE3dR15KQIBMXodenwCAS97HYYBJgIBKowBH4wBgwECASeTAV6TAXQCASKbAV6bAXQCAR66ARW+ASECARi/ARW/AXQCARbAARXLAR4CARHRARfRAXsCAQ7YAVbYAWwCAQngAVbgAWwCAQUtES12AgFkMEwwagIBYjkTOXQCAV80EzRZAgFdThlOfgIBS1FTUXECAUlaG1p8AgFGVRtVYQIBRHchd4YBAgEyelt6eQIBMIMBI4MBiwECAS1+I35pAgErvAEZvAF+AgEZvwFTvwFxAgEXyAEbyAGDAQIBFMMBG8MBYQIBEg==</sads:DebugSymbol.Symbol>
    </StateMachine>
  </m:Workflow1.Implementation>
</m:Workflow1>